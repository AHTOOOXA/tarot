/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/profile': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Profile */
    get: operations['get_profile_profile_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/friends': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Friends */
    get: operations['get_friends_friends_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/add_friend': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Add Friend */
    post: operations['add_friend_add_friend_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/user': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User */
    get: operations['get_user_user_get'];
    put?: never;
    /** Update User */
    post: operations['update_user_user_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/user/{user_id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get User By Id */
    get: operations['get_user_by_id_user__user_id__get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/invite_token': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get Invite Token */
    get: operations['get_invite_token_invite_token_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/process_start': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Process Start */
    post: operations['process_start_process_start_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/tarot/draw_daily_card': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Draw Daily Card */
    get: operations['draw_daily_card_tarot_draw_daily_card_get'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/tarot/select_daily_card': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Select Daily Card */
    post: operations['select_daily_card_tarot_select_daily_card_post'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** GroupSchema */
    GroupSchema: {
      /** Group Id */
      group_id: number;
      /** Title */
      title: string;
      /** Users */
      users: components['schemas']['UserSchema'][];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components['schemas']['ValidationError'][];
    };
    /** InviteTokens */
    InviteTokens: {
      /** User Token */
      user_token: string;
      /** Group Token */
      group_token: string;
    };
    /** StartData */
    StartData: {
      current_user: components['schemas']['UserSchema'];
      inviter?: components['schemas']['GroupSchema'] | null;
      mode?: components['schemas']['StartMode'] | null;
    };
    /**
     * StartMode
     * @constant
     * @enum {string}
     */
    StartMode: 'draw';
    /** StartParamsRequest */
    StartParamsRequest: {
      /** User Token */
      user_token?: string | null;
      /** Group Token */
      group_token?: string | null;
      /** Referal Id */
      referal_id?: string | null;
      mode?: components['schemas']['StartMode'] | null;
    };
    /** TarotCard */
    'TarotCard-Input': {
      /** Id */
      id: number;
      /** Key */
      key: string;
    };
    /** TarotCard */
    'TarotCard-Output': {
      /** Id */
      id: number;
      /** Key */
      key: string;
      /** Name */
      readonly name: string;
      /** Description */
      readonly description: string;
      /** Image Url */
      readonly image_url: string;
    };
    /** UpdateUserRequest */
    UpdateUserRequest: {
      /** First Name */
      first_name?: string | null;
      /** Last Name */
      last_name?: string | null;
      /** Username */
      username?: string | null;
      /** Language Code */
      language_code?: string | null;
      /** Is Premium */
      is_premium?: boolean | null;
      /** Added To Attachment Menu */
      added_to_attachment_menu?: boolean | null;
      /** Allows Write To Pm */
      allows_write_to_pm?: boolean | null;
      /** Photo Url */
      photo_url?: string | null;
      /** App Username */
      app_username?: string | null;
      /** App Language Code */
      app_language_code?: string | null;
      /** Male */
      male?: boolean | null;
      /** Birth Date */
      birth_date?: string | null;
      /** Is Onboarded */
      is_onboarded?: boolean | null;
      /** Is Terms Accepted */
      is_terms_accepted?: boolean | null;
    };
    /** UserSchema */
    UserSchema: {
      /** User Id */
      user_id: number;
      /** First Name */
      first_name: string;
      /** Last Name */
      last_name?: string | null;
      /** Username */
      username?: string | null;
      /** Is Bot */
      is_bot?: boolean | null;
      /** Language Code */
      language_code?: string | null;
      /** Is Premium */
      is_premium?: boolean | null;
      /** Added To Attachment Menu */
      added_to_attachment_menu?: boolean | null;
      /** Allows Write To Pm */
      allows_write_to_pm?: boolean | null;
      /** Photo Url */
      photo_url?: string | null;
      /** App Username */
      app_username?: string | null;
      /** App Language Code */
      app_language_code?: string | null;
      /** Male */
      male?: boolean | null;
      /** Birth Date */
      birth_date?: string | null;
      /** Is Onboarded */
      is_onboarded?: boolean | null;
      /** Is Terms Accepted */
      is_terms_accepted?: boolean | null;
      /** Created At */
      created_at?: string | null;
      /** Updated At */
      updated_at?: string | null;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  get_profile_profile_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
    };
  };
  get_friends_friends_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserSchema'][];
        };
      };
    };
  };
  add_friend_add_friend_post: {
    parameters: {
      query: {
        friend_id: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_user_user_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserSchema'];
        };
      };
    };
  };
  update_user_user_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateUserRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserSchema'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_user_by_id_user__user_id__get: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        user_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['UserSchema'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  get_invite_token_invite_token_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['InviteTokens'];
        };
      };
    };
  };
  process_start_process_start_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['StartParamsRequest'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['StartData'];
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
  draw_daily_card_tarot_draw_daily_card_get: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['TarotCard-Output'][];
        };
      };
    };
  };
  select_daily_card_tarot_select_daily_card_post: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['TarotCard-Input'];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': unknown;
        };
      };
      /** @description Validation Error */
      422: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['HTTPValidationError'];
        };
      };
    };
  };
}
